name: CI

on:
  push:
    branches: ["main"]
  pull_request:

env:
    # disable incremental compilation.
    #
    # incremental compilation is useful as part of an edit-build-test-edit cycle,
    # as it lets the compiler avoid recompiling code that hasn't changed. however,
    # on CI, we're not making small edits; we're almost always building the entire
    # project from scratch. thus, incremental compilation on CI actually
    # introduces *additional* overhead to support making future builds
    # faster...but no future builds will ever occur in any given CI environment.
    #
    # see https://matklad.github.io/2021/09/04/fast-rust-builds.html#ci-workflow
    # for details.
    CARGO_INCREMENTAL: 0
    # allow more retries for network requests in cargo (downloading crates) and
    # rustup (installing toolchains). this should help to reduce flaky CI failures
    # from transient network timeouts or other issues.
    CARGO_NET_RETRY: 10
    CARGO_TERM_COLOR: always
    RUSTUP_MAX_RETRIES: 10
    # don't emit giant backtraces in the CI logs.
    RUST_BACKTRACE: short
    RUSTFLAGS: -Dwarnings


jobs:
  build:
    name: Build (${{ matrix.toolchain }} on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@master
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.toolchain }}
          override: true
      - if: matrix.os == 'ubuntu-latest'
        name: install libudev
        run: sudo apt-get update && sudo apt-get install -y libudev-dev
      - name: cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all-targets

  test:
    name: Tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: install libudev
        run: sudo apt-get update && sudo apt-get install -y libudev-dev
      - name: Run tests
        run: cargo test

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy
          override: true
      - name: install libudev
        run: sudo apt-get update && sudo apt-get install -y libudev-dev
      - name: cargo clippy --all-targets --all-features
        run: cargo clippy --all-targets --all-features

  rustfmt:
    name: Rustfmt (stable)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true
      - name: Run rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check

  all-systems-go:
    name: "all systems go!"
    needs:
      - build
      - test
      - clippy
      - rustfmt
    runs-on: ubuntu-latest
    steps:
      - run: exit 0
